// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: reviews.sql

package db

import (
	"context"
	"database/sql"
	"time"
)

const createReview = `-- name: CreateReview :one
INSERT INTO "reviews" ("id", "submission", "reviewer_id", "finished_at", "created_at") 
    VALUES ($1, $2, $3, $4, $5) RETURNING id, submission, reviewer_id, finished_at, created_at
`

type CreateReviewParams struct {
	ID         int32        `json:"id"`
	Submission int32        `json:"submission"`
	ReviewerID string       `json:"reviewer_id"`
	FinishedAt sql.NullTime `json:"finished_at"`
	CreatedAt  time.Time    `json:"created_at"`
}

func (q *Queries) CreateReview(ctx context.Context, arg CreateReviewParams) (Review, error) {
	row := q.db.QueryRowContext(ctx, createReview,
		arg.ID,
		arg.Submission,
		arg.ReviewerID,
		arg.FinishedAt,
		arg.CreatedAt,
	)
	var i Review
	err := row.Scan(
		&i.ID,
		&i.Submission,
		&i.ReviewerID,
		&i.FinishedAt,
		&i.CreatedAt,
	)
	return i, err
}
